#!/usr/bin/env python3

import json
import subprocess
import sys


def flatten(ll):
    a = []
    for l in ll:
        a.extend(l)
    return a


def run_command(command, stdin):
    p = subprocess.Popen(command, stdin=subprocess.PIPE,
                         stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    output, _ = p.communicate(stdin.encode("ASCII"))
    return output.decode("ASCII"), p.returncode


def run_test(test):
    expected_output = test["expectedOutput"]
    expected_return_code = test["expectedReturnCode"]
    actual_output, actual_return_code = run_command(
        test["command"], test["input"])
    if expected_output == actual_output and expected_return_code == actual_return_code:
        return []
    return [{
        "actualOutput": actual_output,
        "actualReturnCode": actual_return_code,
        "command": test["command"],
        "expectedOutput": expected_output,
        "expectedReturnCode": expected_return_code,
    }]


def main():
    tests = json.load(sys.stdin)
    results = flatten(map(run_test, tests))
    print(json.dumps(results))
    if len(results) == 0:
        sys.exit(0)
    else:
        sys.exit(1)


if __name__ == "__main__":
    main()
